$Id$

------------------------------------------------
 The Virtual Monte Carlo examples
 Copyright (C) 2007-2014 Ivana Hrivnacova
 All rights reserved.

 For the licensing terms see geant4_vmc/LICENSE.
 Contact: vmc@pcroot.cern.ch
-------------------------------------------------


Geant4 VMC - VirtualMC implementation for Geant4
=================================================

Files:
------
  README     - this file
  history    - the tags history
  source     - structured source code
  g4root     - G4Root package 
  examples   - examples demonstrating use of VMC
	      
   
Environment:
------------
  Geant4 VMC requires the Root, CLHEP, Geant4 installations
  and optionally the VGM in case you want to run with Geant4
  native navigation with geometry defined via Root TGeo. 
  The paths to these installations are defined using their
  standard environment variables:

  ROOTSYS   - path to the Root installation
  CLHEP_BASE_DIR - path to the CLHEP installation		    
  G4INSTALL - path to the Geant4 installation
  G4*       - Geant4 environment variables used for selection
              graphics drivers and UIs have the same meaning as
              for Geant4; 
	      Use Configure script in Geant4 to set G4 environment.
              See Geant4 documentation for more details.
	      
	      Note: To build Geant4 shared libraries (required) 
	            G4LIB_BUILD_SHARED has to be set.

  VGM_INSTALL - path to VGM (optional)		    
  USE_VGM     - this environment variable has to be set (eg. to 1)
                to include VGM dependent code in compilation
                (not included by default)
  NO_G3TOG4   - this environment variable has to be set (eg. to 1)
                to exclude G3toG4 dependent code in compilation
                (included by default)
 
  It is important to install Geant4 VMC with the same environment
  setting as Geant4.

  The load paths to shared libraries for Root, CLHEP, Geant4, Geant4 VMC
  and optionally VGM has to be added to the environment variable  
  LD_LIBRARY_PATH - on Linux, Solaris, SGI, Alpha/OSF;
  SHLIB_PATH - on HP-UX.
    
Compilation:
------------
  Geant4 VMC requires Root, CLHEP and Geant4 installation,
  and, optionally, VGM installation.
  Instructions for these installations can be found in their
  own documentation, they are not provided in this README. 

  Geant4 VMC provides besides Geant4 VMC itself also
  the G4Root package and VMC examples.

  You can build all packages from the top directory:
  cd geant4_vmc
  make
 
  Or you can build just a selected package from its own directory:

  cd geant4_vmc/g4root
  make
  
  cd geant4_vmc/source
  make
  
  cd geant4_vmc/examples
  make  
  
  Note, that geant4_vmc always requires g4root to be built first.

  Compilation targets:
  default    builds shared libraries
  static     builds static libraries
  includes   builds the directory geant4_vmc/include with all header files
  all        builds both library and includes
  clean      removes tmp, includes
  cleanall   removes lib, tmp, includes
  dist       creates tar file with distribution of source + binary files
  distsrc    creates tar file with distribution of source

  Note about G4 environment:
  By default, Geant4 VMC supports only the following
  graphics drivers: OpenGL (OGLIX, OGLSX, OGLSXm).
  In order to include other Geant4 graphics drivers or UIs in Geant4 VMC,
  you can replace the block starting ## Supported Geant4 VIS, UI ## comment line
  with uncommented block the  starting  with ## Full Geant4 VIS, UI ## comment
  line in the main Makefile (geant4_vmc/source/Makefile).
  Be aware that not all options were tested with Geant4 VMC 
  and even though a correct behaviour is expected, 
  it is not guaranteed.   

Examples
============
  To build examples libraries:
  cd geant4_vmc/examples
  make  

  To run examples:
  cd geant4_vmc/examples/E01
  root
  root [0] .x run_g3.C   // to run with Geant3
  root [0] .x run_g4.C   // to run with Geant4
  

  Note about Pythia6:
  Both MC require to load libPythia6.so which is not
  provided with Root by default. One can download it
  from the Root Web site:
  http://root.cern.ch/root/Install.html
  (Or directly from: ftp://root.cern.ch/root/pythia/)

Examples Programs
=====================
  Since Geant4 VMC 3.0.x, there are also provided examples main programs
  which can be built against static libraries of all packages. This makes
  execution faster (10% gain was observed on A01 example in sequential mode
  and 24% in multi-threading mode).

  The programs can be built using CMake in a standard way. The CMake
  configuration files, CMakeLists.txt, provided within examples are defined
  with use of a generic configuration files UseVMC.cmake and FindVMC.cmake,
  provided in geant4_vmc/cmake directory together with other Find modules for
  all used packages. FindVMC.cmake is used to find all used packages which
  selection is made by the user via the CMake options defined in this file.

  # build with Geant4
  cd geant4_vmc
  mkdir examples_build_g4
  cd examples_build_g4
  cmake \
    -DGeant4VMC_DIR=/my_path/geant4_vmc \
    -DWITH_GEANT4=ON \
    -DWITH_MTROOT=ON \
    -DWITH_VGM=ON \
    ../examples
  make -jN

  # build with Geant3
  cd geant4_vmc
  mkdir examples_build_g3
  cd examples_build_g3
  cmake \
    -DGeant4VMC_DIR=/my_path/geant4_vmc \
    -DGeant3VMC_DIR=/my_path/geant3 \
    -DWITH_GEANT4=OFF \
    -DWITH_GEANT3=ON \
    -DWITH_MTROOT=ON \
    ../examples
  make -jN

  The example can be then run by calling the executable in the build
  directory:
  cd geant4_vmc/examples/E01
  ../../examples_build_g4/E01/exampleE01
  
  For keeping maximum simplicity of the code, a fixed configuration is defined
  in the examples main() function. More flexible version of the main() function
  is provided in the test programs which default configuration options
  can be changed by running the program with selectedcommand lined options,
  eg.

  testE01
   [-g4g,  --g4-geometry]         Geant4 VMC geometry option
   [-g4pl, --g4-physics-list]     Geant4 physics list selection
   [-g4sp, --g4-special-physics]  Geant4 special physics selection
   [-g4m,  --g4-macro]            Geant4 macro
   [-g4vm, --g4-vis-macro]        Geant4 visualization macro
   [-g3g,  --g3-geometry]         Geant3 geometry option (TGeant3,TGeant3TGeo)
   [-r4m,  --root-macro]          Root macro
   [-v,    --verbose]             verbose option (yes,no)

  Note that the g4* and g3* options are available only when only when the
  program was built with the corresponding WITH_GEANT3 or WITH_GEANT3 option.
  Root macro with arguments has to be passed in a single string, eg.
   --root-macro 'test_E01.C("",kFALSE)'

Root and Geant4 UI
==================

   I. Switching UI
   
   When running Geant4 with Virtual MC a user can switch between
   Root UI and Geant4 UI:
   
   From Root to Geant4 UI:
   root [0] ((TGeant4*)gMC)->StartGeantUI()                                            
   
   From Geant4 to Root UI:
   PreInit> /mcControl/root                                                         
   
   
   II. Calling macros
   
   Call Geant4 macro "myMacro.in" from Root:
   root [0] ((TGeant4*)gMC)->ProcessGeantMacro("myMacro.in");

   Call Root macro "myMacro.C" from Geant4:
   PreInit> /mcControl/rootMacro myMacro
                                    
   
   III. Calling commands
   
   Call Geant4 command from Root:
   root [0] ((TGeant4*)gMC)->ProcessGeantCommand("/tracking/verbose 1");
   
   Call Root command from Geant4:
   Idle> /mcControl/rootCmd TBrowser b;                                             
